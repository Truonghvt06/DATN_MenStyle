<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <title>MenStyle - Quản lý tài khoản</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet" />
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f8f9fa;
      padding: 30px;
    }

    header {
      background-color: #111;
      color: #fff;
      padding: 20px 30px;
      font-size: 28px;
      font-weight: 600;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }

    nav {
      display: flex;
      gap: 20px;
      padding: 20px 30px;
      background: #fff;
      box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

    nav a {
      text-decoration: none;
      color: #333;
      font-weight: 500;
      padding: 10px 20px;
      border-radius: 6px;
      transition: 0.3s;
      border: 1px solid transparent;
    }

    nav a:hover {
      background: #111;
      color: #fff;
      border-color: #111;
    }

    .avatar {
      width: 50px;
      height: 50px;
      object-fit: cover;
      border-radius: 50%;
    }

    .btn-small {
      margin-top: 5px;
      font-size: 12px;
    }

    .variant-info {
      font-size: 14px;
      line-height: 1.6;
    }
  </style>
</head>
<body>
  <header>MenStyle - Quản lý tài khoản</header>
  <nav>
    <a href="/products/view"><i class="bi bi-box"></i> Sản phẩm</a>
    <a href="/coupons/view"><i class="bi bi-ticket"></i> Phiếu giảm giá</a>
    <a href="/accounts/view"><i class="bi bi-people"></i> Tài khoản</a>
  </nav>

  <main class="bg-white p-4 rounded shadow-sm">
    <h3 class="mb-4">Danh sách tài khoản</h3>
    <div class="table-responsive">
      <table class="table table-bordered table-hover align-middle text-center">
        <thead class="table-primary">
          <tr>
            <th>Họ tên</th>
            <th>Email</th>
            <th>SĐT</th>
            <th>Giới tính</th>
            <th>Ngày sinh</th>
            <th>Avatar</th>
            <th>Thao tác</th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach(user => { %>
            <tr>
              <td><%= user.name %></td>
              <td><%= user.email %></td>
              <td><%= user.phone %></td>
              <td><%= user.gender || '-' %></td>
              <td>
                <%
                  const dob = user.date_of_birth ? new Date(user.date_of_birth) : null;
                  const dobFormatted = dob
                    ? `${dob.getDate().toString().padStart(2, '0')}/${(dob.getMonth() + 1).toString().padStart(2, '0')}/${dob.getFullYear()}`
                    : '-';
                %>
                <%= dobFormatted %>
              </td>
              
              <td>
                <% if (user.avatar) { %>
                  <img src="<%= user.avatar %>" class="avatar" alt="avatar" />
                <% } else { %>
                  <span class="text-muted">Không có</span>
                <% } %>
              </td>
              <td>
                <button class="btn btn-sm btn-primary btn-small" onclick="addToCart('<%= user._id %>')">+ Giỏ hàng</button>
                <button class="btn btn-sm btn-success btn-small" onclick="addToFavorite('<%= user._id %>')">+ Yêu thích</button>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </main>

  <script>
    // Chọn 1 sản phẩm test để thêm vào giỏ hàng hoặc yêu thích
    const TEST_PRODUCT_ID = '<%= products[0]?._id || "" %>';
    const TEST_VARIANT_INDEX = 0;

    async function addToCart(userId) {
      try {
        if (!TEST_PRODUCT_ID) throw new Error("⚠️ Chưa cấu hình TEST_PRODUCT_ID");

        const res = await fetch('/accounts/cart/add-by-id', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            userId: userId,
            productId: TEST_PRODUCT_ID,
            variantIndex: TEST_VARIANT_INDEX,
            quantity: 1
          })
        });
        const data = await res.json();
        if (!res.ok) throw new Error(data.message || "Thêm giỏ hàng thất bại");
        alert(data.message);
        location.reload();
      } catch (err) {
        alert(err.message);
      }
    }

    async function addToFavorite(userId) {
      try {
        if (!TEST_PRODUCT_ID) throw new Error("⚠️ Chưa cấu hình TEST_PRODUCT_ID");

        const res = await fetch('/accounts/favorites/add-by-id', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            userId: userId,
            productId: TEST_PRODUCT_ID,
            variantIndex: TEST_VARIANT_INDEX
          })
        });
        const data = await res.json();
        if (!res.ok) throw new Error(data.message || "Thêm yêu thích thất bại");
        alert(data.message);
        location.reload();
      } catch (err) {
        alert('Lỗi yêu thích: ' + err.message);
      }
    }
  </script>
</body>
</html>
